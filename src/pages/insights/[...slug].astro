---
// Import necessary components and utilities
import MainLayout from "@/layouts/MainLayout.astro";
import AvatarBlogLarge from "@/components/ui/avatars/AvatarBlogLarge.astro";
import CardRelated from "@/components/ui/cards/CardRelated.astro";
import Bookmark from "@/components/ui/buttons/Bookmark.astro";
import SocialShare from "@/components/ui/buttons/SocialShare.astro";
import PostFeedback from "@/components/ui/feedback/PostFeedback.astro";
import { Image } from "astro:assets";
import { capitalize, formatDate } from "@/utils/utils";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@/data_files/constants";

// getStaticPaths is used to pre-render all routes based on the blog posts
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
// Get the current post's data
const { post } = Astro.props;

// Get all blog posts
const blogPosts: CollectionEntry<"blog">[] = await getCollection("blog");

// Filter out the current post to get related posts
const relatedPosts: CollectionEntry<"blog">[] = blogPosts.filter(
  (blogEntry) => blogEntry.slug !== post.slug
);

const pageTitle: string = `${post.data.title} | ${SITE.title}`;

// Render Markdown content using Content component
const { Content } = await post.render();
---

<MainLayout title={pageTitle}>
  <section class="py-6 sm:py-8 lg:py-12">
    <div class="mx-auto px-4 md:px-8 max-w-xs sm:max-w-md md:max-w-lg lg:max-w-xl xl:max-w-screen-xl">
      <div class="grid gap-8 md:grid-cols-2 lg:gap-12">
        <div>
          <div class="h-64 overflow-hidden rounded-lg shadow-lg md:h-auto">
            <Image
              class="h-full w-full object-cover object-center"
              src={post.data.cardImage}
              alt={post.data.cardImageAlt}
              draggable={"false"}
              format={"avif"}
            />
          </div>
        </div>

        <div class="md:pt-8">
          <div class="mb-6 flex items-center justify-between">
            <div class="flex w-full gap-x-5 sm:items-center sm:gap-x-3">
              <AvatarBlogLarge blogEntry={post} />
              <div class="grow">
                <div class="flex items-center justify-between gap-x-2">
                  <div>
                    <div
                      class="hs-tooltip inline-block [--placement:bottom] [--trigger:hover]"
                    >
                      <span
                        class="font-bold text-neutral-700 dark:text-neutral-300"
                      >
                        {post.data.author}
                      </span>
                    </div>
                    <ul class="text-xs text-neutral-500">
                      <li
                        class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                      >
                        {formatDate(post.data.pubDate)}
                      </li>
                      <li
                        class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                      >
                        {post.data.readTime} min read
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <h1
            class="mb-4 text-balance text-center text-2xl font-bold text-neutral-800 dark:text-neutral-200 sm:text-3xl md:mb-6 md:text-left"
          >
            {post.data.title}
          </h1>
          <article class="markdown-content text-pretty text-lg text-neutral-700 dark:text-neutral-300"> 
            <Content /> 
          </article>
          <div 
            class="mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
          > 
            <div 
              class="flex flex-wrap gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0"
            > 
              { 
                post.data.tags?.map((tag: string, index) => ( 
                  <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300"> 
                    {capitalize(tag)}
                  </span>
                ))
              }
            </div>
            <div class="flex items-center justify-end gap-x-1.5"> 
              <Bookmark /> 
              <div 
                class="mx-3 block h-4 border-e border-neutral-400 dark:border-neutral-500"
              > 
              </div>
              <div class="inline-flex">
                <SocialShare pageTitle={post.data.title} /> 
              </div>
            </div>
          </div> 
        </div> 
      </div> 
    </div> 
  </section> 

  <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14"> 
    <div class="mb-10 max-w-2xl">
      <h2
        class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        Related articles
      </h2>
    </div>

    <div class="grid grid-cols-2 gap-6">
      {relatedPosts.map((entry) => <CardRelated blogEntry={entry} />)}
    </div>
  </section> 
  <PostFeedback 
    title="Was this post helpful?" 
    firstChoice="Yes"
    secondChoice="No"
  /> 
</MainLayout>
