---
// Import necessary components and utilities
import MainLayout from "@/layouts/MainLayout.astro";
import AvatarBlogLarge from "@/components/ui/avatars/AvatarBlogLarge.astro";
import CardRelated from "@/components/ui/cards/CardRelated.astro";
import Bookmark from "@/components/ui/buttons/Bookmark.astro";
import SocialShare from "@/components/ui/buttons/SocialShare.astro";
import PostFeedback from "@/components/ui/feedback/PostFeedback.astro";
import { formatDate, capitalize } from "@/utils/utils";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@/data_files/constants";

// getStaticPaths is used to pre-render all routes based on the blog posts
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the current post's data and render the post's content
const { post } = Astro.props;
const { Content } = await post.render();

// Get all blog posts
const blogPosts: CollectionEntry<"blog">[] = await getCollection("blog");

// Filter out the current post to get related posts
const relatedPosts: CollectionEntry<"blog">[] = blogPosts.filter(
  (blogEntry) => blogEntry.slug !== post.slug
);

const pageTitle: string = `${post.data.title} | ${SITE.title}`;

---

<MainLayout title={pageTitle}>
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="max-w-2xl">
      <div class="mb-6 flex items-center justify-between">
        <AvatarBlogLarge blogEntry={post} />
        <div class="grow">
          <div class="flex items-center justify-between gap-x-2">
            <div>
              <div class="hs-tooltip inline-block [--placement:bottom] [--trigger:hover]">
                <!--Post metadata and author info-->
                <span class="font-bold text-neutral-700 dark:text-neutral-300">
                  {post.data.author}
                </span>
                <ul class="text-xs text-neutral-500">
                  <li>{formatDate(post.data.pubDate)}</li>
                  <li>{post.data.readTime} min read</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!--Blog post title-->
      <h1 class="mb-3 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-3xl">
        {post.data.title}
      </h1>
      <!--Blog post contents rendered using post.render()-->
      <article class="text-pretty text-lg text-neutral-700 dark:text-neutral-300">
        <Content />
      </article>
      <div>
        <!--Blog post tags-->
        <div class="flex flex-wrap gap-x-2 gap-y-1">
          {post.data.tags?.map((tag: string) => (
            <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300">
              {capitalize(tag)}
            </span>
          ))}
        </div>
        <!--Bookmark and Share buttons-->
        <div class="flex items-center justify-end gap-x-1.5">
          <Bookmark />
          <div class="mx-3 block h-4 border-e border-neutral-400 dark:border-neutral-500"></div>
          <SocialShare pageTitle={pageTitle} />
        </div>
      </div>
    </div>
    <PostFeedback title="Was this post helpful?" firstChoice="Yes" secondChoice="No" />
  </section>

  <!--Related articles section-->
  <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <h2 class="mb-10 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
      Related articles
    </h2>
    <div class="grid grid-cols-2 gap-6">
      {relatedPosts.map((entry) => <CardRelated blogEntry={entry} />)}
    </div>
  </section>
</MainLayout>

<style is:global>
  :root {
    --transition-cubic: cubic-bezier(0.165, 0.84, 0.44, 1);
  }

  html {
    scroll-behavior: smooth;
  }

  article h2,
  article h3,
  article h4,
  article h5,
  article h6 {
    font-weight: bold;
    margin-top: 2.5rem;
    scroll-margin-top: 3rem;
  }

  h1 {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  h2 {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  h4 {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  p {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }
</style>
